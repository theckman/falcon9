// Copyright 2016 Tim Heckman. All rights reserved.
// Use of this source code is governed by the MIT
// license that can be found in the LICENSE file.

// Package f9crew provides the interface for what represents a crew member. In
// addition to the interface, there is a struct (CrewMember) that implements
// the interface.
package f9crew

import (
	"crypto/sha256"
	"fmt"
)

// Interface is the interface for a crew member. This allows you to obtain
// their name for display purposes, and a hash of their key to uniquely
// identify them.
type Interface interface {
	// HashedKey returns a SHA256 hash of the crew's key.
	HashedKey() string

	// Name resturns the crew member's name.
	Name() string
}

// HashKey takes a key and returns the SHA256 string-representation of the hash.
func HashKey(key string) string {
	hasher := sha256.New()

	hasher.Write([]byte(key))

	return fmt.Sprintf("%x", hasher.Sum(nil))
}

// CrewMember is the struct representation of a human. There can be multiple
// human within one Dragon capsule.
//
// This struct should be created by using the NewCrewMember() function.
type CrewMember struct {
	name      string
	hashedKey string
}

// NewCrewMember is a function to create a new crew member with the required
// information. The first value is the crew's name, used primarily for display
// purposes. The second is their unique key, generated by the client. This is
// simply used as an identifier for the crew member.
func NewCrewMember(name string, key string) (*CrewMember, error) {
	if name == "" {
		return nil, ncmParamErr("name")
	}

	if key == "" {
		return nil, ncmParamErr("key")
	}

	cm := &CrewMember{
		name:      name,
		hashedKey: HashKey(key),
	}

	return cm, nil
}

func ncmParamErr(s string) error {
	return fmt.Errorf("the crew member's %s cannot be an empty value", s)
}

// HashedKey returns a SHA256 hash of the crew's key. The user's key is not
// persisted within the struct, only the resulting hash.
func (cm *CrewMember) HashedKey() string { return cm.hashedKey }

// Name resturns the crew member's name.
func (cm *CrewMember) Name() string { return cm.name }
